import React from 'react';
import Button from '../new-button/variants/default/button';
import { LinkButtonProps } from '../new-button/variants/default/link';
import { type IconButtonProps } from '../new-button/variants/icon/button';
import { type LinkIconButtonProps } from '../new-button/variants/icon/link';
import { buttonAppearances, iconButtonAppearances, linkButtonAppearances } from './appearances';
type DefaultButtonVariant = {
    name: 'Button';
    Component: typeof Button;
    elementType: typeof HTMLButtonElement;
    appearances: typeof buttonAppearances;
};
type LinkButtonVariant = {
    name: 'LinkButton';
    Component: typeof LinkButtonRender;
    elementType: typeof HTMLAnchorElement;
    appearances: typeof linkButtonAppearances;
};
type IconButtonVariant = {
    name: 'IconButton';
    Component: typeof IconButtonRender;
    elementType: typeof HTMLButtonElement;
    appearances: typeof iconButtonAppearances;
};
type LinkIconButtonVariant = {
    name: 'LinkIconButton';
    Component: typeof LinkIconButtonRender;
    elementType: typeof HTMLAnchorElement;
    appearances: typeof iconButtonAppearances;
};
type DefaultButtonVariants = DefaultButtonVariant | LinkButtonVariant;
type LinkButtonVariants = LinkButtonVariant | LinkIconButtonVariant;
type IconButtonVariants = IconButtonVariant | LinkIconButtonVariant;
export type Variant = DefaultButtonVariant | LinkButtonVariant | IconButtonVariant | LinkIconButtonVariant;
declare const LinkButtonRender: React.ForwardRefExoticComponent<Omit<LinkButtonProps<never>, "href"> & {
    href?: string | undefined;
} & React.RefAttributes<HTMLAnchorElement>>;
declare const IconButtonRender: React.ForwardRefExoticComponent<Omit<IconButtonProps, "label" | "icon"> & {
    icon?: import("../new-button/variants/types").IconProp | undefined;
    label?: string | undefined;
} & React.RefAttributes<HTMLButtonElement>>;
declare const LinkIconButtonRender: React.ForwardRefExoticComponent<Omit<LinkIconButtonProps<never>, "label" | "href" | "icon"> & {
    href?: string | undefined;
    icon?: import("../new-button/variants/types").IconProp | undefined;
    label?: string | undefined;
} & React.RefAttributes<HTMLAnchorElement>>;
declare const variants: Variant[];
export declare const defaultButtonVariants: DefaultButtonVariants[];
export declare const linkButtonVariants: LinkButtonVariants[];
export declare const iconButtonVariants: IconButtonVariants[];
export default variants;
